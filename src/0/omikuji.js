// Generated by CoffeeScript 1.9.1

/*
おみくじを引いて結果を出力するだけのJS
 */

(function() {
  (function() {

    /*
    Model
     */
    var Omikuji, OmikujiBox, box, i, j, num, ref;
    Omikuji = (function() {
      Omikuji = function(options) {
        this.count = 0;
        this.name = options.name;
        this.percentage = options.percentage;
      };
      Omikuji.prototype.countup = function() {
        this.count += 1;
      };
      return Omikuji;
    })();

    /*
    Collection
     */
    OmikujiBox = (function() {
      OmikujiBox = function() {
        this.models = [
          new Omikuji({
            name: "大吉",
            percentage: 5
          }), new Omikuji({
            name: "中吉",
            percentage: 40
          }), new Omikuji({
            name: "小吉",
            percentage: 40
          }), new Omikuji({
            name: "凶",
            percentage: 15
          })
        ];
        this.setRanges();
      };
      OmikujiBox.prototype.setRanges = function() {
        var total;
        total = 0;
        this.models.forEach(function(model) {
          model.under = total;
          total += model.percentage;
          model.top = total;
        });
      };
      OmikujiBox.prototype.pull = function() {
        var idx, matchIndex, random;
        random = Math.round(Math.random() * 100);
        matchIndex = 0;
        idx = 0;
        this.models.forEach(function(model) {
          if (model.under <= random && model.top > random) {
            matchIndex = idx;
          }
          idx += 1;
        });
        this.models[matchIndex].countup();
        return this.models[matchIndex];
      };
      OmikujiBox.prototype.result = function() {
        console.log("------ " + num + "回引いた結果 ------");
        this.models.forEach(function(model) {
          console.log(model.name + " : " + model.count + "回");
        });
      };
      return OmikujiBox;
    })();

    /*
    100回引いた結果を出力
     */
    box = new OmikujiBox();
    num = 100;
    for (i = j = 0, ref = num; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
      box.pull();
    }
    return box.result();
  });

}).call(this);
